/**
 * Copyright John Cheng, Aug 12, 2011
 */

/**
 * @author jcheng
 *
 */
package jcheng
import java.util.Arrays.asList
import scala.io.Source
import org.apache.http.client.methods.HttpDelete
import org.apache.http.client.methods.HttpGet
import org.apache.http.client.methods.HttpPut
import org.apache.http.client.methods.HttpUriRequest
import org.apache.http.conn.scheme.Scheme
import org.apache.http.conn.scheme.SchemeRegistry
import org.apache.http.entity.StringEntity
import org.apache.http.impl.client.BasicResponseHandler
import org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy
import org.apache.http.impl.client.DefaultHttpClient
import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager
import org.apache.http.impl.DefaultConnectionReuseStrategy
import org.apache.http.params.CoreConnectionPNames
import joptsimple.OptionParser
import joptsimple.OptionSet
import org.apache.http.conn.scheme.PlainSocketFactory
import javax.net.ssl.SSLSocketFactory

object InsertTest {

  def main(argv: Array[String]): Unit = {

    // Setup options parser
    val parser = new OptionParser()
    parser.acceptsAll(asList("help", "h"), "help")
    def printHelp() = parser.printHelpOn(System.out)
    val countSpec = parser.acceptsAll(asList("count", "n"), "Number of operations to perform.")
      .withOptionalArg()
      .ofType(classOf[java.lang.Integer])
      .defaultsTo(1000)
    val serverSpec = parser.accepts("serverName", "Server name.")
      .withOptionalArg()
      .ofType(classOf[String])
      .defaultsTo("http://localhost:5984")
    val modeSpec = parser.acceptsAll(asList("mode", "m"),
      "test mode: one of insert, update-direct, or update-handler")
      .withOptionalArg()
      .ofType(classOf[java.lang.String])
    val sizeSpec = parser.acceptsAll(asList("size", "s"), "Size of JSON document in kB.")
      .withOptionalArg()
      .ofType(classOf[java.lang.Integer])
      .defaultsTo(12)
    parser.acceptsAll(asList("delete", "D"), "Delete test database before test.")
    val dbNameSpec = parser.accepts("testdb", "Name of the test database")
      .withOptionalArg()
      .defaultsTo("jc_couch_test")
    parser.acceptsAll(asList("batch", "b"), "Enable _bulk_docs API when possible.")

    // Validate options
    var options: OptionSet = null;
    try {
      options = parser.parse(argv: _*)
      if (options.has("h")) {
        parser.printHelpOn(System.out)
        return
      }
      if (!options.has("m") ||
        !List("insert", "update-direct", "update-hander").contains(modeSpec.value(options))) {
        println("test mode required: 'insert', 'update-direct', or 'update-handler'")
        return
      }
    } catch {
      case e: Exception =>
        println(e.getMessage())
        parser.printHelpOn(System.out)
        return
    }
    val serverName = serverSpec.value(options)
    val dbName = dbNameSpec.value(options)
    val dbUrl = "%s/%s".format(serverName, dbName)
    val count = countSpec.value(options)
    val mode = modeSpec.value(options)
    val size = sizeSpec.value(options)
    val doDelete = options.has("D")
    val doBatch = options.has("b")

    // Define convenience methods:
    //   'request' - given a GET/PUT/POST, return a status code and the response
    //   'doGet' - given a GET URL, return status code and response
    val schemeRegistry = new SchemeRegistry();
    schemeRegistry.register(
      new Scheme("http", 80, PlainSocketFactory.getSocketFactory()));

    val cm = new ThreadSafeClientConnManager(schemeRegistry);
    cm.setMaxTotal(1000)
    cm.setDefaultMaxPerRoute(1000);
    val httpClient = new DefaultHttpClient(cm)
    val httpParams = httpClient.getParams()
    httpClient.setKeepAliveStrategy(new DefaultConnectionKeepAliveStrategy())
    httpClient.setReuseStrategy(new DefaultConnectionReuseStrategy())
    httpParams.setParameter("http.language.Accept-Language", "en-us");
    httpParams.setParameter("http.protocol.content-charset", "UTF-8");
    httpParams.setParameter("Accept", "application/xml,application/xhtml+xml,application/json,text/plain;q=0.8");
    httpParams.setParameter("Cache-Control", "max-age=0");
    httpParams.setParameter(CoreConnectionPNames.STALE_CONNECTION_CHECK, false)
    httpParams.setParameter(CoreConnectionPNames.TCP_NODELAY, true)
    //httpClient.getParams().setParameter("http.protocol.wait-for-continue", 10000);

    def request(method: HttpUriRequest): (Int, String) = {
      try {
        val response = httpClient.execute(method)
        val statusCode = response.getStatusLine().getStatusCode()
        val content = Source.fromInputStream(response.getEntity().getContent()).getLines.mkString
        return (statusCode, content)
      } catch {
        case e: Exception => return (-1, e.getMessage())
      }
    }
    def doGet(url: String): (Int, String) = {
      return request(new HttpGet(url))
    }

    var response = doGet(serverName)
    if (response._1 != 200) {
      println("CouchDB appears to be down: " + response._2)
      return
    }

    response = doGet(dbUrl)
    if (response._1 == 200) {
      if (doDelete) {
        response = request(new HttpDelete(dbUrl))
        response = request(new HttpPut(dbUrl))
        println("Database '%s' deleted and recreated.".format(dbName))
      } else {
        println("WARN: database '%s' already exists.".format(dbName))
      }
    } else if (response._1 == 404) {
      response = request(new HttpPut(dbUrl))
      println("Database '%s' created.".format(dbName))
    }

    val responseHandler = new BasicResponseHandler();
    val stime = System.currentTimeMillis()
    println(mkdoc().length())
    try {
      0.until(count).foreach { docId =>
        val doc = mkdoc()
        val put = new HttpPut(dbUrl + "/" + docId + "?batch=ok")
        put.setEntity(new StringEntity(doc))
        //response = request(put)
        //println(response._2)
        httpClient.execute(put, responseHandler)

      }
    } catch {
      case e: Exception =>
        e.printStackTrace()
    }
    val etime = System.currentTimeMillis()
    val elapsed = etime - stime
    println("%d ms, %s".format(elapsed, (count.toFloat/elapsed) * 1000f))
  }

  def mkdoc(): String = {
    return "{\"prop}"
  }

}
